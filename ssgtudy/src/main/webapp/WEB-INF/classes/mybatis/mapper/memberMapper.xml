<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<resultMap type="HashMap" id="schoolMap">
		<id column="schoolCode" property="schoolCode"/>
		<id column="schoolName" property="schoolName"/>	
	</resultMap>

	<select id="loginMember" parameterType="String" resultType="com.ssg.study.member.Member">
		SELECT membership, m.userId,md.schoolCode, nickName, userName, pwd, stateCode, join_date, edit_date, last_date,schoolName
		FROM member m
		JOIN member_detail md ON m.userId = md.userId
        LEFT OUTER JOIN school s ON s.schoolcode = md.schoolcode
		WHERE m.userId = #{userId} AND stateCode = 0
	</select>
	
	<update id="updateLastLogin" parameterType="String">
		UPDATE member SET last_date = SYSDATE, failure_cnt = 0
		WHERE userId = #{userId}
	</update>
	
	<select id="readSchool" resultMap="schoolMap">
		SELECT schoolCode,schoolName FROM school
	</select>
	
	<insert id="insertMember" parameterType="com.ssg.study.member.Member">
		INSERT INTO member(userId, pwd, stateCode, join_date, edit_date, last_date, failure_cnt)
   			 VALUES(#{userId},#{pwd}, 0, SYSDATE, SYSDATE, SYSDATE, 0)
	</insert>
	
	<insert id="insertMember_detail" parameterType="com.ssg.study.member.Member">
		INSERT INTO member_detail(userId, nickName, tel,email, membership, birth, zip_code, addr1, addr2,  codeChange_Cnt, questCount, lottoUse,userName,schoolCode)
   		 VALUES(#{userId}, #{nickName}, #{tel},#{email}, 1, #{birth}, #{zip_code}, #{addr1}, #{addr2}, 0, 0, 0,#{userName},#{schoolCode, jdbcType=INTEGER})
	</insert>
	
	
	<select id="readuserId" parameterType="String" resultType="com.ssg.study.member.Member">
		SELECT m.userId, pwd, stateCode, TO_CHAR(join_date, 'YYYY-MM-DD') join_date, TO_CHAR(edit_date, 'YYYY-MM-DD') edit_date , TO_CHAR(last_date, 'YYYY-MM-DD') last_date, failure_cnt 
		     ,nickName, tel,email, membership, TO_CHAR(birth, 'YYYY-MM-DD') birth , zip_code, addr1, addr2, schoolCode,
		     codeChange_Cnt, questCount, lottoUse,userName
		    FROM member m
		    JOIN member_detail d ON d.userId = m.userId
		WHERE m.userId = #{userId}
	</select>
	
	<update id="updatemember" parameterType="com.ssg.study.member.Member">
		UPDATE member SET pwd=#{pwd} WHERE userId = #{userId}
	</update>
	
	<update id="updatemember_detail" parameterType="com.ssg.study.member.Member">
		UPDATE member_detail SET nickName=#{nickName},tel=#{tel},email=#{email},zip_code=#{zip_code},schoolCode=#{schoolCode,jdbcType=INTEGER},addr1=#{addr1},addr2=#{addr2},userName=#{userName},codeChange_cnt=#{codeChange_cnt} WHERE userId = #{userId}
	</update>
	
	<select id="readAdmin" resultType="com.ssg.study.member.Member">
			SELECT membership, m.userId,schoolCode, nickName, userName, pwd, stateCode, join_date, edit_date, last_date
			FROM member m
			JOIN member_detail md ON m.userId = md.userId
			WHERE membership &gt;= 50
	</select>
	
	<select id="findAdmin" parameterType="String" resultType="com.ssg.study.member.Member">
			SELECT membership, m.userId,schoolCode, nickName, userName, pwd, stateCode, join_date, edit_date, last_date
			FROM member m
			JOIN member_detail md ON m.userId = md.userId
			WHERE m.userId=#{userId}
	</select>
	
	<update id="updateAdmin" parameterType="Map">
		UPDATE member_detail SET membership=#{membership}  WHERE userId = #{userId}
	</update>
	
	<select id="readStateCode" parameterType="Map" resultType="com.ssg.study.member.Member">
		  SELECT * FROM(
			    SELECT ROWNUM rnum, td.* FROM(
			       SELECT userId,stateCode,TO_CHAR(join_date, 'YYYY-MM-DD') join_date,TO_CHAR(edit_date, 'YYYY-MM-DD') edit_date,TO_CHAR(last_date, 'YYYY-MM-DD') last_date
					FROM member
					WHERE stateCode &lt; 10 AND userId like '%'||#{keyword}||'%'
			    )td
			    WHERE ROWNUM &lt;= #{end}
			   )
			   WHERE rnum &gt;= #{start}				
	</select>
	
	<update id="updateStateCode" parameterType="Map">
		UPDATE member SET stateCode=#{stateCode}  WHERE userId = #{userId}		
	</update>
	
	<select id="readCount" parameterType="String" resultType="Integer">
		SELECT NVL(COUNT(*),0) count
		FROM member
		WHERE stateCode &lt; 10 AND userId like '%'||#{keyword}||'%'
	</select>
	
	<select id="readcommunity" parameterType="Map" resultType="com.ssg.study.member.Reportmember">
	 SELECT * FROM(
			    SELECT ROWNUM rnum, td.* FROM(
					 SELECT com.userId reporteduserId ,com.boardnum num,comr.userId,reason,m.stateCode,'/community/article?page=1&amp;boardNum=' url, -1 replyNum 
							,'COMMUNITY_REPORT' reportTable,'COMMUNITY' listTable,'boardnum' col  ,'list' type
					FROM COMMUNITY com
					JOIN COMMUNITY_REPORT comr ON comr.boardnum = com.boardnum
					JOIN member m ON com.userId = m.userId
					UNION ALL
					
					SELECT cr.userId reporteduserId ,cr.boardnum num,crr.userId,reason,m.stateCode,'/community/article?page=1&amp;boardNum=' url, cr.replyNum replyNum   
							,'COMMUNITY_REPLYREPORT' reportTable,'COMMUNITY_REPLY' listTable,'replyNum' col ,'reply' type
					FROM COMMUNITY_REPLY cr
					JOIN COMMUNITY_REPLYREPORT crr ON cr.replyNum = crr.replyNum
					JOIN member m ON cr.userId = m.userId
                    UNION ALL
                    
                    SELECT b.userId reporteduserId ,b.bbsNum num,r.userId,reason,m.stateCode,'/bbs/article?page=1&amp;bbsNum=' url, -1 replyNum   
							,'bbs_report' reportTable,'bbs' listTable,'bbsNum' col ,'list' type 
                    FROM bbs b
                    JOIN bbs_report r ON b.bbsNum = r.bbsNum
                    JOIN member m ON b.userId = m.userId
                    UNION ALL
                    
                    SELECT br.userId reporteduserId ,br.bbsNum num,brr.userId,reason,m.stateCode,'/bbs/article?page=1&amp;bbsNum=' url, br.replyNum replyNum   
							,'bbs_replyreport' reportTable,'bbs_reply' listTable,'replyNum' col ,'reply' type 
                    FROM bbs_reply br
                    JOIN bbs_replyreport brr ON br.replyNum = brr.replyNum
                    JOIN member m ON br.userId = m.userId
                    UNION ALL
                     
                    SELECT q.userId reporteduserId ,q.qnaNum num,rq.userId,reason,m.stateCode,'/qna/article?page=1&amp;qnaNum=' url, -1 replyNum   
							,'qna_report' reportTable,'qna' listTable,'bbsNum' col ,'list' type 
                    FROM qna q
                    JOIN qna_report rq ON q.qnaNum = rq.qnaNum
                    JOIN member m ON q.userId = m.userId
                    UNION ALL
                    
                    SELECT q.userId reporteduserId ,q.qnaNum num,rq.userId,reason,m.stateCode,'/qna/article?page=1&amp;qnaNum=' url, q.replyNum replyNum  
							,'QnA_replyreport' reportTable,'QnA_reply' listTable,'replyNum' col ,'reply' type 
                    FROM QnA_reply q
                    JOIN QnA_replyreport rq ON q.replyNum = rq.replyNum
                    JOIN member m ON q.userId = m.userId
		 )td
			    WHERE ROWNUM &lt;= #{end}
			   )
			   WHERE rnum &gt;= #{start}	
	</select>
	
	
	<delete id="deleteReport" parameterType="Map">	
		DELETE FROM ${table}
		WHERE ${col} = #{boardNum} AND userId = #{userId}
	</delete>
	
	<select id="dataCountReportComm" resultType="Integer">
	SELECT NVL(COUNT(*),0)FROM(
				SELECT com.userId reporteduserId ,com.boardnum num,comr.userId,reason,m.stateCode,'1' url 
							,'COMMUNITY_REPORT' reportTable,'COMMUNITY' listTable,'boardnum' col  ,'list' type
					FROM COMMUNITY com
					JOIN COMMUNITY_REPORT comr ON comr.boardnum = com.boardnum
					JOIN member m ON com.userId = m.userId
					UNION ALL
					
					SELECT cr.userId reporteduserId ,cr.boardnum num,crr.userId,reason,m.stateCode,'cum=1' url  
							,'COMMUNITY_REPLYREPORT' reportTable,'COMMUNITY_REPLY' listTable,'replyNum' col ,'reply' type
					FROM COMMUNITY_REPLY cr
					JOIN COMMUNITY_REPLYREPORT crr ON cr.replyNum = crr.replyNum
					JOIN member m ON cr.userId = m.userId
                    UNION ALL
                    
                    SELECT b.userId reporteduserId ,b.bbsNum num,r.userId,reason,m.stateCode,'cum=1' url  
							,'bbs_report' reportTable,'bbs' listTable,'bbsNum' col ,'list' type 
                    FROM bbs b
                    JOIN bbs_report r ON b.bbsNum = r.bbsNum
                    JOIN member m ON b.userId = m.userId
                    UNION ALL
                    
                    SELECT br.userId reporteduserId ,br.bbsNum num,brr.userId,reason,m.stateCode,'cum=1' url  
							,'bbs_replyreport' reportTable,'bbs_reply' listTable,'replyNum' col ,'reply' type 
                    FROM bbs_reply br
                    JOIN bbs_replyreport brr ON br.replyNum = brr.replyNum
                    JOIN member m ON br.userId = m.userId
                    UNION ALL
                     
                    SELECT q.userId reporteduserId ,q.qnaNum num,rq.userId,reason,m.stateCode,'cum=1' url  
							,'qna_report' reportTable,'qna' listTable,'bbsNum' col ,'list' type 
                    FROM qna q
                    JOIN qna_report rq ON q.qnaNum = rq.qnaNum
                    JOIN member m ON q.userId = m.userId
                    UNION ALL
                    
                    SELECT q.userId reporteduserId ,q.qnaNum num,rq.userId,reason,m.stateCode,'cum=1' url  
							,'QnA_replyreport' reportTable,'QnA_reply' listTable,'replyNum' col ,'reply' type 
                    FROM QnA_reply q
                    JOIN QnA_replyreport rq ON q.replyNum = rq.replyNum
                    JOIN member m ON q.userId = m.userId
	)
	</select>
	
</mapper>