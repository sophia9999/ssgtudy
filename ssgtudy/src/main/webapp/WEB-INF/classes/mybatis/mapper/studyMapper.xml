<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="study">

	<sql id="where-list">
		<if test="condition=='all' ">
			( INSTR(subject, #{keyword}) &gt; 0
				OR DBMS_LOB.INSTR(content, #{keyword}) &gt; 0 )
		</if>
		<if test="condition=='subject' ">
			INSTR(subject, #{keyword}) &gt; 0
		</if>
		<if test="condition=='content' ">
			DBMS_LOB.INSTR(content, #{keyword}) &gt; 0
		</if>
		<if test="condition=='userId' ">
			userId=#{keyword}
		</if>
		<if test="condition=='reg_date' ">
			( TO_CHAR(reg_date, 'YYYY-MM-DD') = #{keyword}
				OR TO_CHAR(reg_date, 'YYYYMMDD') = #{keyword} )
		</if>
	</sql>
	

	<insert id="insertStudy" parameterType="com.ssg.study.study.Study" >
		INSERT INTO study(studyNum, studyGoal, studyName, studyStatus)
		VALUES (#{studyNum}, #{studyGoal}, #{studyName}, 0)
	</insert>
	
	<update id="updateStudy" parameterType="com.ssg.study.study.Study" >
		UPDATE study SET studyGoal=#{studyGoal}, studyName=#{studyName}
		WHERE studyNum = #{studyNum}		
	</update>
	<update id="inactiveStudy" parameterType="com.ssg.study.study.Study" >
		UPDATE study SET studyStatus = 1
		WHERE studyNum = #{studyNum}		
	</update>
	
	<insert id="insertTimes" parameterType="com.ssg.study.study.Study">
		INSERT INTO times(studyNum, questCount, usedCount) 
		VALUES(#{studyNum}, 0, 0)
	</insert>
	<update id="updateQuestCount" parameterType="Integer">
		UPDATE times SET questCount = questCount + 1
		WHERE studyNum = #{studyNum}
	</update>
	<update id="updateUsedCount" parameterType="Integer">
		UPDATE times SET usedCount = usedCount + 1
		WHERE studyNum = #{studyNum}
	</update>
	
	<select id="seq" resultType="Integer">
		SELECT study_seq.NEXTVAL FROM dual
	</select>
	
	<insert id="insertStudyMember" parameterType="com.ssg.study.study.Study">
		INSERT INTO study_member(memberNum, role, studyNum, userId)
		VALUES (studymember_seq.NEXTVAL, #{role}, #{studyNum}, #{userId})
	</insert>
	
	<select id="studyList" parameterType="map" resultType="com.ssg.study.study.Study">
		SELECT * FROM (        
	    	SELECT ROWNUM rnum, tb.* FROM (	
				SELECT s.studyNum, memberNum, role, userId, studyName, studyGoal, studyStatus
				FROM study s
				JOIN study_member sm ON s.studyNum = sm.studyNum
				WHERE userId = #{userId}
				ORDER BY studyNum DESC
		    ) tb WHERE ROWNUM &lt;= #{end}    
		) where rnum &gt;= #{start}
	</select>
	
	<select id="myStudyDataCount" parameterType="String" resultType="Integer">
		SELECT NVL(count(*), 0)
		FROM study s
		JOIN study_member sm ON s.studyNum = sm.studyNum
		WHERE userId = #{userId}
	</select>
	
	<select id="studyHomeList" parameterType="String" resultType="com.ssg.study.study.Study">
		SELECT s.studyNum, memberNum, role, userId, studyName, studyGoal, studyStatus
		FROM study s
		JOIN study_member sm ON s.studyNum = sm.studyNum
		WHERE userId = #{userId}
	</select>
	<select id="readStudy" parameterType="map" resultType="com.ssg.study.study.Study">
		SELECT s.studyNum, memberNum, role, userId, studyName, studyGoal, studystatus
		FROM study s
		JOIN study_member sm ON s.studyNum = sm.studyNum
		WHERE s.studyNum = #{studyNum} and userId= #{userId}
	</select>
	<select id="visitStudy" parameterType="Integer" resultType="com.ssg.study.study.Study">
		SELECT studyNum, studyGoal, studyName, studyStatus
		FROM study s
		WHERE studyNum = #{studyNum}
	</select>
	<select id="readCategory" parameterType="Integer" resultType="map">
		SELECT categoryNum, categoryName, studyNum 
		FROM study_category 
		WHERE studyNum=#{studyNum}
	</select>
	<insert id="insertCategory" parameterType="map">
		INSERT INTO study_category(categoryNum, categoryName, studyNum)
		VALUES (studyCategory_seq.NEXTVAL, #{categoryName}, #{studyNum})
	</insert>
	<update id="updateCategory" parameterType="map">
		UPDATE study_category SET categoryName = #{categoryName} 
		WHERE categoryNum = #{categoryNum}
	</update>
	<delete id="deleteCategory" parameterType="Integer">
		DELETE FROM study_category 
		WHERE categoryNum = #{categoryNum}
	</delete>
	<select id="studyAdList" parameterType="map" resultType="com.ssg.study.study.Study">
		SELECT * FROM (        
	    	SELECT ROWNUM rnum, tb.* FROM (	
				SELECT s.studyNum, boardNum, subject, hitCount, studyStatus, nickname, content, sa.userId, TO_CHAR(reg_date, 'YYYY-MM-DD') reg_date
					FROM study_ad sa
			        JOIN study s ON sa.studynum = s.studyNum
					JOIN member_detail md ON sa.userId = md.userId
					<where>
						<if test="keyword != null and keyword != '' ">
							<include refid="where-list"/>
						</if>
						AND studyStatus = 0
				    </where>
		    	ORDER BY boardNum DESC
		    ) tb WHERE ROWNUM &lt;= #{end}    
		) where rnum &gt;= #{start}
	</select>
	
	<select id="studyAdDataCount" parameterType="map" resultType="Integer">
		SELECT NVL(count(*), 0)
			FROM study_ad sa
	        JOIN study s ON sa.studynum = s.studyNum
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
			AND studyStatus = 0
	    </where>
	</select>
	
	<select id="readStudyAd" parameterType="Integer" resultType="com.ssg.study.study.Study">
		SELECT studyNum, boardNum, hitCount, subject, content, sa.userId, nickName, TO_CHAR(reg_date, 'YYYY-MM-DD') reg_date
		FROM study_ad sa
		JOIN member_detail md ON sa.userId = md.userId
		WHERE boardNum = #{boardNum}
	</select>
	
	<insert id="insertStudyAd" parameterType="com.ssg.study.study.Study">
		INSERT INTO study_ad(BoardNum, subject, content, studyNum, userId, reg_date, hitCount)
		VALUES (STUDYAD_SEQ.NEXTVAL, #{subject}, #{content}, #{studyNum}, #{userId}, SYSDATE, 0)
	</insert>
	
	<update id="updateStudyAdHitCount" parameterType="Integer">
		UPDATE study_ad SET hitCount=hitCount+1 WHERE BoardNum = #{BoardNum}
	</update>
	
	<update id="updateStudyAd" parameterType="com.ssg.study.study.Study">
		UPDATE study_ad SET subject=#{subject}, content=#{content}
		WHERE boardNum = #{boardNum} AND userId = #{userId}
	</update>
	
	<delete id="deleteStudyAd" parameterType="map">
		DELETE FROM study_ad WHERE boardNum = #{boardNum}
		<if test="membership &lt; 55 ">
			AND userId = #{userId}
		</if>
	</delete>
	
	<!-- 스터디참여 신청은 한번만 가능 -->
	<select id="studyMemberOnce" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0) FROM study_member
		WHERE userId = #{userId} AND studyNum = #{studyNum}
	</select>
	
	<select id="rankList" parameterType="map" resultType="com.ssg.study.study.Study">
		SELECT * FROM (
		    SELECT ROWNUM rnum, tb.* FROM (
		        SELECT s.studyNum, studyName, studyGoal, questCount, usedCount, RANK() OVER (ORDER BY questCount desc) rank
		        FROM times t
		        JOIN study s ON s.studyNum= t.studyNum
		        <where>
				    <if test="keyword != null and keyword != '' ">
				    INSTR(studyName, #{studyName}) &gt;= 1
				    </if>
				    AND studyStatus = 0
			    </where>
		    ) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	<select id="rankDataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*), 0)
		FROM times t
		JOIN study s ON s.studyNum= t.studyNum
		<where>
		    <if test="keyword != null and keyword != '' ">
		     INSTR(studyName, #{keyword}) &gt;= 1
		    </if>
		    AND studyStatus = 0
	    </where>
	</select>
	
	<select id="memberList" parameterType="Integer" resultType="com.ssg.study.study.Study">
		SELECT md.userId, nickName, role, s.studyNum 
			FROM study s
			JOIN study_member sb ON s.studyNum = sb.studyNum
			JOIN member_detail md ON sb.userId = md.userId
		WHERE s.studyNum = #{studyNum}
		ORDER BY role DESC
	</select>
	
	<select id="studyListByCategoryDataCount" resultType="Integer" parameterType="map">
		SELECT NVL(COUNT(*), 0)
		FROM study_board_1 sb
		JOIN study_category sc ON sc.categoryNum = sb.categoryNum
		<where>
			<if test="keyword != null and keyword != '' ">
				<include refid="where-list"/>
			</if>
				AND sb.categoryNum = #{categoryNum}
		</where>
	</select>
	
	<select id="studyListByCategory" parameterType="map" resultType="com.ssg.study.study.Study">
		SELECT * FROM (        
	    	SELECT ROWNUM rnum, tb.* FROM (	
				SELECT s.studyNum, boardNum, subject, sb.categoryNum, hitCount, studyStatus, nickname, content, sb.userId, TO_CHAR(reg_date, 'YYYY-MM-DD') reg_date
					FROM study_board_1 sb
                    JOIN study_category sc ON sc.categoryNum = sb.categoryNum
			        JOIN study s ON sc.studynum = s.studyNum
					JOIN member_detail md ON sb.userId = md.userId
			    	<where>
						<if test="keyword != null and keyword != '' ">
								<include refid="where-list"/>
						</if>
						AND sb.categoryNum = #{categoryNum}
					</where>
		    		ORDER BY boardNum DESC
		    ) tb WHERE ROWNUM &lt;= #{end}    
		) where rnum &gt;= #{start}
	</select>
	
</mapper>