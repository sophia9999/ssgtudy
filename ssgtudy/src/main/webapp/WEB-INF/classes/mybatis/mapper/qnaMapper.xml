<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="qna">
	<select id="seq" resultType="Integer">
		SELECT qnaNum_seq.NEXTVAL FROM dual
	</select>
	<insert id="insertBoard" parameterType="com.ssg.study.qna.Qna">
		INSERT INTO qna(qnaNum, subject, content, hitCount, reg_date, userId)
			VALUES (#{qnaNum}, #{subject}, #{content}, 0, SYSDATE, #{userId})
	</insert>

	<sql id="where-list">
		<choose>
			<when test="condition=='all'">
				(
					INSTR(subject, #{keyword}) &gt; 0 OR
						DBMS_LOB.INSTR(content,#{keyword}) &gt;0
				)
			</when>	
			<when test="condition=='content'">
				DBMS_LOB.INSTR(content,#{keyword}) &gt;0
			</when>
			<when test="condition=='reg_date'">
				(
					TO_CHAR(q.reg_date, 'YYYY-MM-DD') = #{keyword} OR
						TO_CHAR(q.reg_date, 'YYYYMMDD') = #{keyword}
				)
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>

	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM qna q
		JOIN member_detail m ON q.userId = m.userId
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<select id="listBoard" parameterType="map" resultType="com.ssg.study.qna.Qna">
		SELECT * FROM (
			SELECT ROWNUM rnum, th.* FROM (
				SELECT q.qnaNum, nickName, subject, content, hitCount, 
					TO_CHAR(q.reg_date, 'YYYY-MM-DD') reg_date,
					NVL(replyCount, 0) replyCount, 
					NVL(fileCount,0) fileCount
				FROM qna q
				JOIN member_detail m ON q.userId = m.userId
				LEFT OUTER JOIN(
					SELECT qnaNum, COUNT(*) replyCount FROM qna_reply
					WHERE answer=0
					GROUP BY qnaNum
				) rp ON q.qnaNum = rp.qnaNum
				 LEFT OUTER JOIN(
                   SELECT qnaNum, COUNT(*) fileCount FROM qna_file
                   GROUP BY qnaNum
                ) f ON q.qnaNum = f.qnaNum
		  		<where>
					<if test="keyword!=null and keyword!=''">
						<include refid="where-list"/>
					</if>
				</where>
				ORDER BY qnaNum DESC
			) th WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	<select id="readBoard" parameterType="Integer"
		resultType="com.ssg.study.qna.Qna">
		SELECT q.qnaNum, q.userId, subject, nickName, content, hitCount, 
			TO_CHAR(q.reg_date, 'YYYY-MM-DD') reg_date, NVL(boardLikeCount, 0) boardLikeCount
		FROM qna q
		JOIN member_detail m ON q.userId = m.userId
		LEFT OUTER JOIN (
			SELECT qnaNum, COUNT(*) boardLikeCount FROM qna_like
			GROUP BY qnaNum
		) bc ON q.qnaNum = bc.qnaNum
		WHERE q.qnaNum = #{qnaNum}
	</select>
	
	<update id="updateHitCount" parameterType="Integer">
		UPDATE qna SET hitCount=hitCount+1 WHERE qnaNum=#{qnaNum}
	</update>
	
	<select id="preReadBoard" parameterType="map"
		resultType="com.ssg.study.qna.Qna">
		SELECT * FROM (
			SELECT qnaNum, subject
			FROM qna q
			JOIN member_detail m ON q.userId = m.userId
			<where>
				<if test="keyword!=null and keyword!=''">
					<include refid="where-list"/>
				</if>
				AND (qnaNum &gt; #{qnaNum} )
			</where>
			ORDER BY qnaNum ASC
		) WHERE ROWNUM = 1
	</select>
	
	<select id="nextReadBoard" parameterType="map"
		resultType="com.ssg.study.qna.Qna">
		SELECT * FROM (
			SELECT qnaNum, subject
			FROM qna q
			JOIN member_detail m ON q.userId = m.userId
			<where>
				<if test="keyword!=null and keyword!=''">
					<include refid="where-list"/>
				</if>
				AND (qnaNum &lt; #{qnaNum} )
			</where>
			ORDER BY qnaNum DESC
		) WHERE ROWNUM = 1
	</select>
	
	<update id="updateBoard" parameterType="com.ssg.study.qna.Qna">
		UPDATE qna SET subject=#{subject}, content=#{content}
		WHERE qnaNum = #{qnaNum}
	</update>
	<delete id="deleteBoard" parameterType="Integer">
		DELETE FROM qna WHERE qnaNum=#{qnaNum}
	</delete>
	
	<!-- 게시글 공감 -->
	<insert id="insertBoardLike" parameterType="map">
		INSERT INTO qna_like (qnaNum, userId) VALUES (#{qnaNum}, #{userId})
	</insert>
	
	<delete id="deleteBoardLike" parameterType="map">
		DELETE FROM qna_like WHERE qnaNum = #{qnaNum} AND userId = #{userId}
	</delete>
	
	<select id="boardLikeCount" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*) FROM qna_like WHERE qnaNum = #{qnaNum}
	</select>
	
	<select id="userBoardLiked" parameterType="map" resultType="com.ssg.study.qna.Qna">
		SELECT qnaNum, userId FROM qna_like WHERE qnaNum = #{qnaNum} AND userId = #{userId}
	</select>
	
	<!-- 파일 -->
	<insert id="insertFile" parameterType="com.ssg.study.qna.Qna">
		INSERT INTO qna_file ( qnafileNum, originalFilename, saveFilename, qnaNum, fileSize )
		VALUES (qnafile_seq.NEXTVAL, #{originalFilename}, #{saveFilename}, #{qnaNum}, #{fileSize})
	</insert>
	
	<select id="listFile" parameterType="Integer" resultType="com.ssg.study.qna.Qna">
		SELECT qnafileNum, originalFilename, saveFilename, qnaNum, fileSize 
		FROM qna_file
		WHERE qnaNum=#{qnaNum}
	</select>
	
	<select id="readFile" parameterType="Integer" resultType="com.ssg.study.qna.Qna">
		SELECT qnafileNum, originalFilename, saveFilename, qnaNum, fileSize 
		FROM qna_file
		WHERE qnafileNum=#{qnafileNum}
	</select>
	
	<delete id="deleteFile" parameterType="map">
		DELETE FROM qna_file WHERE ${field}=#{qnaNum}
	</delete>
	
	<!-- 댓글 -->
	<insert id="insertReply" parameterType="com.ssg.study.qna.Reply">
		INSERT INTO qna_reply(replyNum, qnaNum, userId, content, answer, reg_date)
		VALUES (qnareply_seq.NEXTVAL, #{qnaNum}, #{userId}, #{content}, #{answer}, SYSDATE )
	</insert>
	
	<select id="listReply" parameterType="map" resultType="com.ssg.study.qna.Reply">
		SELECT * FROM (
   			SELECT ROWNUM rnum, tb.* FROM (
		        SELECT r.replyNum, r.userId, nickName, qnaNum, content, r.reg_date,
		            NVL(answerCount, 0) answerCount,
		            NVL(likeCount, 0) likeCount
		        FROM qna_reply r
		        JOIN member m ON r.userId = m.userId
		        JOIN member_detail d ON m.userId = d.userId
		        LEFT OUTER JOIN (
		            SELECT answer, COUNT(*) answerCount
		            FROM qna_reply WHERE answer != 0 GROUP BY answer
		        ) a ON r.replyNum = a.answer
		        LEFT OUTER JOIN(
		        	SELECT replyNum, COUNT(*) likeCount
		        	FROM qna_reply_like GROUP BY replyNum
		        ) c ON r.replyNum = c.replyNum
		       WHERE qnaNum=#{qnaNum} AND r.answer=0
		       ORDER BY r.replyNum DESC
		    ) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
	
	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM qna_reply
		WHERE qnaNum=#{qnaNum} AND answer=0
	</select>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM qna_reply
		WHERE replyNum=#{replyNum}
		<if test="mode=='reply'">
			OR answer=#{replyNum}
		</if>
	</delete>
	
	<!-- 댓글의 답글 리스트 -->
	<select id="listReplyAnswer" parameterType="Integer" resultType="com.ssg.study.qna.Reply">
		SELECT replyNum, qnaNum, r.userId, nickName, content, reg_date, answer
		FROM qna_reply r
		JOIN member m ON r.userId = m.userId
		JOIN member_detail d ON m.userId = d.userId
		WHERE answer = #{answer}
		ORDER BY replyNum DESC
	</select>
	
	<select id="replyAnswerCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*),0)
		FROM qna_reply WHERE answer=#{answer}
	</select>
	
	<!-- 댓글 좋아요 추가 -->
	<insert id="insertReplyLike" parameterType="map">
		INSERT INTO qna_reply_like(replyNum, userId) VALUES (#{replyNum},#{userId})
	</insert>
	
	<delete id="deleteReplyLike" parameterType="map">
		DELETE FROM qna_reply_like WHERE replyNum = #{replyNum} AND userId=#{userId}
	</delete>
	
	<select id="replyLikeCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) likeCount FROM qna_reply_like
		WHERE replyNum = #{replyNum}
	</select>
	
	<select id="userReplyLiked" parameterType="map" resultType="com.ssg.study.qna.Reply">
		SELECT replyNum, userId FROM qna_reply_like WHERE replyNum = #{replyNum}
	</select>
	
	<insert id="insertQnaReport" parameterType="map">
		INSERT INTO qna_report(qnaNum, userId, reason)
		VALUES (#{qnaNum}, #{userId}, #{reason})
	</insert>
</mapper>