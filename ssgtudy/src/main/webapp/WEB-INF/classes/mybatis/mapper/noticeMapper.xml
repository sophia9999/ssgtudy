<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="notice">
	<select id="seq" resultType="Integer">
		SELECT notice_seq.NEXTVAL FROM dual
	</select>
	<insert id="insertBoard" parameterType="com.ssg.study.notice.Notice">
		INSERT INTO notice(nNum, subject, content, hitCount, reg_date, userId)
			VALUES (#{nNum}, #{subject}, #{content}, 0, SYSDATE, #{userId})
	</insert>
 
	<sql id="where-list">
		<choose>
			<when test="condition=='all'">
				(
					INSTR(subject, #{keyword}) &gt; 0 OR
						DBMS_LOB.INSTR(content,#{keyword}) &gt;0
				)
			</when>	
			<when test="condition=='content'">
				DBMS_LOB.INSTR(content,#{keyword}) &gt;0
			</when>
			<when test="condition=='reg_date'">
				(
					TO_CHAR(q.reg_date, 'YYYY-MM-DD') = #{keyword} OR
						TO_CHAR(q.reg_date, 'YYYYMMDD') = #{keyword}
				)
			</when>
			<otherwise>
				INSTR(${condition}, #{keyword}) &gt; 0
			</otherwise>
		</choose>
	</sql>

	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*), 0)
		FROM notice n
		JOIN member_detail m ON n.userId = m.userId
		<where>
			<if test="keyword!=null and keyword!=''">
				<include refid="where-list"/>
			</if>
		</where>
	</select>
	
	<select id="listBoard" parameterType="map" resultType="com.ssg.study.notice.Notice">
		SELECT * FROM (
			SELECT ROWNUM rnum, th.* FROM (
				SELECT n.nNum, nickName, subject, content, hitCount, 
					TO_CHAR(n.reg_date, 'YYYY-MM-DD') reg_date,
					NVL(replyCount, 0) replyCount, 
					NVL(fileCount,0) fileCount
				FROM notice n
				JOIN member_detail m ON n.userId = m.userId
				LEFT OUTER JOIN(
					SELECT nNum, COUNT(*) replyCount FROM notice_reply
					WHERE answer=0
					GROUP BY nNum
				) rp ON n.nNum = rp.nNum
				 LEFT OUTER JOIN(
                   SELECT nNum, COUNT(*) fileCount FROM notice_file
                   GROUP BY nNum
                ) f ON n.nNum = f.nNum
		  		<where>
					<if test="keyword!=null and keyword!=''">
						<include refid="where-list"/>
					</if>
				</where>
				ORDER BY nNum DESC
			) th WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>



	<select id="readBoard" parameterType="Integer"
		resultType="com.ssg.study.notice.Notice">
		SELECT n.nNum, n.userId, subject, nickName, content, hitCount, 
			TO_CHAR(n.reg_date, 'YYYY-MM-DD') reg_date
		FROM notice n
		JOIN member_detail m ON n.userId = m.userId
		WHERE n.nNum = #{nNum}
	</select>
	
	<update id="updateHitCount" parameterType="Integer">
		UPDATE notice SET hitCount=hitCount+1 WHERE nNum=#{nNum}
	</update>
	
	<select id="preReadBoard" parameterType="map"
		resultType="com.ssg.study.notice.Notice">
		SELECT * FROM (
			SELECT nNum, subject
			FROM notice n
			JOIN member_detail m ON n.userId = m.userId
			<where>
				<if test="keyword!=null and keyword!=''">
					<include refid="where-list"/>
				</if>
				AND (nNum &gt; #{nNum} )
			</where>
			ORDER BY nNum ASC
		) WHERE ROWNUM = 1
	</select>
	
	<select id="nextReadBoard" parameterType="map"
		resultType="com.ssg.study.notice.Notice">
		SELECT * FROM (
			SELECT nNum, subject
			FROM notice n
			JOIN member_detail m ON n.userId = m.userId
			<where>
				<if test="keyword!=null and keyword!=''">
					<include refid="where-list"/>
				</if>
				AND (nNum &lt; #{nNum} )
			</where>
			ORDER BY nNum DESC
		) WHERE ROWNUM = 1
	</select>
	
	<update id="updateBoard" parameterType="com.ssg.study.notice.Notice">
		UPDATE notice SET subject=#{subject}, content=#{content}
		WHERE nNum = #{nNum}
	</update>
	<delete id="deleteBoard" parameterType="Integer">
		DELETE FROM notice WHERE nNum=#{nNum}
	</delete>
	
	<!-- 파일 -->

	<insert id="insertFile" parameterType="com.ssg.study.notice.Notice">
		INSERT INTO notice_file ( notice_fileNum, originalFilename, saveFilename, nNum, fileSize )
		VALUES (noticeFile_seq.NEXTVAL, #{originalFilename}, #{saveFilename}, #{nNum}, #{fileSize})
	</insert>
	
	<select id="listFile" parameterType="Integer" resultType="com.ssg.study.notice.Notice">
		SELECT notice_fileNum, originalFilename, saveFilename, nNum, fileSize 
		FROM notice_file
		WHERE nNum=#{nNum}
	</select>
	
	<select id="readFile" parameterType="Integer" resultType="com.ssg.study.notice.Notice">
		SELECT notice_fileNum, originalFilename, saveFilename, nNum, fileSize 
		FROM notice_file
		WHERE notice_fileNum=#{notice_fileNum}
	</select>
	
	<delete id="deleteFile" parameterType="map">
		DELETE FROM notice_file WHERE ${field}=#{nNum}
	</delete>

	<!-- 댓글 -->
	<insert id="insertReply" parameterType="com.ssg.study.notice.Reply">
		INSERT INTO notice_reply(replyNum, nNum, userId, content, answer, reg_date)
		VALUES (notice_reply_seq.NEXTVAL, #{nNum}, #{userId}, #{content}, #{answer}, SYSDATE )
	</insert>
	
	<select id="listReply" parameterType="map" resultType="com.ssg.study.notice.Reply">
		SELECT * FROM (
   			SELECT ROWNUM rnum, tb.* FROM (
		        SELECT r.replyNum, r.userId, nickName, nNum, content, r.reg_date,
		            NVL(answerCount, 0) answerCount,
		            NVL(likeCount, 0) likeCount
		        FROM notice_reply r
		        JOIN member m ON r.userId = m.userId
		        JOIN member_detail d ON m.userId = d.userId
		        LEFT OUTER JOIN (
		            SELECT answer, COUNT(*) answerCount
		            FROM notice_reply WHERE answer != 0 GROUP BY answer
		        ) a ON r.replyNum = a.answer
		        LEFT OUTER JOIN(
		        	SELECT replyNum, COUNT(*) likeCount
		        	FROM notice_replylike GROUP BY replyNum
		        ) c ON r.replyNum = c.replyNum
		       WHERE nNum=#{nNum} AND r.answer=0
		       ORDER BY r.replyNum DESC
		    ) tb WHERE ROWNUM &lt;= #{end}
		) WHERE rnum &gt;= #{start}
	</select>
 
	<select id="replyCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) FROM notice_reply
		WHERE nNum=#{nNum} AND answer=0
	</select>
	
	<delete id="deleteReply" parameterType="map">
		DELETE FROM notice_reply
		WHERE replyNum=#{replyNum}
		<if test="mode=='reply'">
			OR answer=#{replyNum}
		</if>
	</delete>

	<!-- 댓글의 답글 리스트 -->
	<select id="listReplyAnswer" parameterType="Integer" resultType="com.ssg.study.notice.Reply">
		SELECT replyNum, nNum, r.userId, nickName, content, reg_date, answer
		FROM notice_reply r
		JOIN member m ON r.userId = m.userId
		JOIN member_detail d ON m.userId = d.userId
		WHERE answer = #{answer}
		ORDER BY replyNum DESC
	</select>
	
	<select id="replyAnswerCount" parameterType="Integer" resultType="Integer">
		SELECT NVL(COUNT(*),0)
		FROM notice_reply WHERE answer=#{answer}
	</select>
	
	<!-- 댓글 좋아요 추가 -->
	<insert id="insertReplyLike" parameterType="map">
		INSERT INTO notice_replylike(replyNum, userId) VALUES (#{replyNum},#{userId})
	</insert>
	
	<delete id="deleteReplyLike" parameterType="map">
		DELETE FROM notice_replylike WHERE replyNum = #{replyNum} AND userId=#{userId}
	</delete>
	
	<select id="replyLikeCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) likeCount FROM notice_replylike
		WHERE replyNum = #{replyNum}
	</select>
	
	<select id="userReplyLiked" parameterType="map" resultType="com.ssg.study.notice.Reply">
		SELECT replyNum, userId FROM notice_replylike WHERE replyNum = #{replyNum}
	</select>

</mapper>